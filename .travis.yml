# This builds multiple projects
# 1. the "one-app" of the Book Monkey2 - all components are tied togehter in one big app with explanations
# 2. single apps for each iteration/increment

language: node_js

node_js:
  - '4.2'
  
env:
  global:
    # node-gyp: Node.js v4 (or io.js v3) compiler requirements
    # https://docs.travis-ci.com/user/languages/javascript-with-nodejs#Node.js-v4-(or-io.js-v3)-compiler-requirements
    - CXX=g++-4.8  
  matrix:
    - NAME=one-app
    - NAME=iteration-1-book-details BLUEPRINT=src/client/app/book-monkey/iteration-1/book-details
    - NAME=iteration-1-book-list BLUEPRINT=src/client/app/book-monkey/iteration-1/book-list

install:
  - npm install

script:
  - echo $NAME

# [1] one-app: fills /dist folder and adds CNAME file as well as 404 file for gh-pages
  - test $NAME = "one-app" && npm run ng build
  - test $NAME = "one-app" && npm run ng test
  - test $NAME = "one-app" && echo "book-monkey2.angular2buch.de" > dist/CNAME
  - test $NAME = "one-app" && cp dist/index.html dist/404.html

# [2] create multiple single apps without any compilation
  - test $NAME != "one-app" && mkdir TMP
  - test $NAME != "one-app" && cd TMP
  - test $NAME != "one-app" && node ../node_modules/angular-cli/bin/ng new BookMonkey
  - test $NAME != "one-app" && cd $TRAVIS_BUILD_DIR
  - test $NAME != "one-app" && cp -rf $BLUEPRINT TMP/BookMonkey/src/client/app
  
  
deploy:
# [1] one-app: send compiled version to gh-pages
#- test $NAME = one-app \
#  && npm run ng -- ghpages --repo="https://REPO_USER_AND_PASS@github.com/book-monkey2-build/$NAME.git" --name="The Buildbot" --email=buildbot@angular2buch.de \

# [2] one-app: send uncompiled version to master
#- test $NAME != one-app \
#  && npm run ng -- ghpages --repo="https://REPO_USER_AND_PASS@github.com/book-monkey2-build/$NAME.git" --name="The Buildbot" --email=buildbot@angular2buch.de --dir=TMP/BookMonkey --branch=master \



# ---- boilerplate ----

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-4.8

# a build will finish as soon as a job has failed      
matrix:
  fast_finish: true       
  
#only building specific branches  
branches:
  only:
    - master
    - refactoring-all-it